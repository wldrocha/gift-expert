{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputaValue","setInputaValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","res","json","data","map","img","id","title","images","downsized_medium","gifs","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAERC,mBAAS,IAFD,mBAEvCC,EAFuC,KAE1BC,EAF0B,KAgB9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAYK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAsBO,OACxCN,EAAe,MAKnB,SACI,uBAAOO,KAAK,OAAOC,SAdD,SAACN,GACvBF,EAAeE,EAAEO,OAAOC,QAa8BA,MAAQX,O,+BCrBzDY,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KAHW,UAIAA,EAAKC,KAAI,SAAAC,GAAQ,IAAD,EAC/B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QARvB,eAIbY,EAJa,yBAYZA,GAZY,4CAAH,sDCaLC,EAXK,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAC1B,OACI,qBAAKc,UAAU,OAAf,SACI,mCACI,qBAAKC,IAAMf,EAAMgB,IAAMP,EAAQK,UAAU,cACzC,qCAAcL,UCmBfQ,EAtBE,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDP,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAAEpB,IAEEqB,EDf0BM,CAAc3B,GAAvCoB,EAFuB,EAEvBA,QAAcR,EAFS,EAEdL,KAEjB,OACI,qCACI,6BAAMP,IACLoB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SAEYJ,EAAOJ,KAAI,SAAEC,GAAF,OACP,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEZzBkB,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,cADhB,mBACvB2C,EADuB,KACX5C,EADW,KAO9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ4C,EAAWrB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCfjC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4b1eb034.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputaValue, setInputaValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputaValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(inputaValue.trim().length >2){\n            setCategories(cats => [ inputaValue, ...cats ])\n            setInputaValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input type=\"text\" onChange={ handleInputChange } value={ inputaValue } />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=IQ3jvQOYNWqz2IlGHVhZvJXE2nOt1zB1`\n    const res = await fetch(url)\n    const { data } = await res.json()\n    const gifs = await data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs\n}\n","import React from 'react'\n\nconst GifGridItem = ({ title, url}) => {\n    return (\n        <div className=\"card\">\n            <figure>\n                <img src={ url } alt={ title } className=\"card-img \" />\n                <figcaption>{ title }</figcaption>\n            </figure>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem'\n\nconst GiftGrid = ({ category }) => {\n\n    const { loading, data:images } = useFetchGifs( category )\n    \n    return (\n        <>\n            <h3>{ category }</h3>\n            {loading && <p>Loaging...</p>}\n            <div className=\"card-grid\">\n                    {\n                        images.map(( img ) => (\n                            <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                            />\n                        ))\n                    }\n            </div>\n        </>\n    )\n}\n\nexport default GiftGrid\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                setTimeout( () => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n                }, 3000)\n            })\n    }, [ category ])\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport GiftGrid from './components/GiftGrid'\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One punch'])\n\n    // const handleAdd = () => {\n    //     setCategories(cats => [ 'one', ...cats])\n    // }\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GiftGrid\n                            key={category}\n                            category={category}\n                        />\n                        ))\n                }\n            </ol>\n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}